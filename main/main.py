import base
import config
from aiogram import types,Dispatcher,executor,Bot

bot=Bot(config.token)
dp=Dispatcher(bot)
base.creat_table()

@dp.message_handler(commands=["start"])
async def started (message: types.Message):
    if message.chat.type == "private":
        key=types.InlineKeyboardMarkup()

        b2 = types.InlineKeyboardButton(text='–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è‚ùì', callback_data='qts')
        b1=types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É‚ûï',callback_data='add')
        b3 = types.InlineKeyboardButton(text='–†–µ–∫–ª–∞–º–∞üìà', callback_data='ads')
        b4 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å –±–æ—Ç–∞üíµ', callback_data='buy')
        key.add(b1,b3)
        key.add(b2,b4)
        await bot.send_message(message.chat.id,f"–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ {message.chat.first_name} !–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç‚¨á",parse_mode='html',reply_markup=key)

@dp.message_handler(commands=["mute"],commands_prefix="!")
async def load(message:types.Message):
    await message.delete()
    try:
        num=message.text.split()[1]
    except:
        await bot.send_message(message.chat.id, "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!")
        return

    if not num.isdigit():
        await bot.send_message(message.chat.id,"–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ!\n–ü—Ä–∏–º–µ—Ä: !mute 10")
        return

    member=await bot.get_chat_member(message.chat.id,message.from_user.id)
    if member.is_chat_admin():
        if message.reply_to_message is not None:
            base.add_mute(message.reply_to_message.from_user.id,num=num,fname=message.reply_to_message.from_user.first_name)
            name=message.reply_to_message.from_user.get_mention(as_html=True)
            await bot.send_message(message.chat.id,f"–¢–µ–ø–µ—Ä—å –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –ø–æ—Å–ª–µ {num} —Å–µ–∫—É–Ω–¥!",parse_mode="Html")

@dp.message_handler(commands=["unmute"],commands_prefix="!")
async def deletethis(message:types.Message):
    await message.delete()
    member=await  bot.get_chat_member(chat_id=message.chat.id,user_id=message.from_user.id)
    if member.is_chat_admin():
        if message.reply_to_message is not None:
            base.del_mute(message.reply_to_message.from_user.id)
            name= message.reply_to_message.from_user.get_mention(as_html=True)
            await bot.send_message(message.chat.id,f"–¢–µ–ø–µ—Ä—å –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} , –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å",parse_mode="html")
        elif len(message.text.split()) == 2 and message.text.split()[1].isdigit():
            idu=int(message.text.split()[1])
            base.del_mute(id)
            name='<a href="tg://user?id=idu">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</a>'
            await bot.send_message(message.chat.id, f"–¢–µ–ø–µ—Ä—å –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} , –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å",
                                   parse_mode="html")


@dp.message_handler(commands=["ban"],commands_prefix="!")
async def bunned_users(message:types.Message):
    if message.chat.type!="private":
        member = await bot.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
        if member.is_chat_admin():
            if message.reply_to_message is not None:
                await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                base.banned(id=message.reply_to_message.from_user.id,user=message.reply_to_message.from_user.username,nick=message.reply_to_message.from_user.first_name)
                await bot.send_message(message.chat.id, "–Ø –∏—Å–∫–ª—é—á–∏–ª –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            else:
                await bot.send_message(message.chat.id,"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ò–õ–ò –≤—ã –¥–∞–ª–∏ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")




@dp.message_handler(commands=["unban"],commands_prefix="!")
async def bunned_users(message:types.Message):
    if message.chat.type!="private":
        member = await bot.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
        if member.is_chat_admin():
            try:
                if message.reply_to_message is not None:
                    await bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                    base.unbaning(message.reply_to_message.from_user.id)
                    await bot.send_message(message.chat.id, "–Ø —Ä–∞–∑–±–∞–Ω–∏–ª –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            except:
                await bot.send_message(message.chat.id,"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ò–õ–ò –≤—ã –¥–∞–ª–∏ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

@dp.message_handler(commands=["blist"],commands_prefix="!")
async def blacklist(message:types.Message):
    bl=base.BlackList()
    bl_msg="ID: ------ USER: ------ NAME:\n"
    if bl != []:
        for i in bl:
            bl_msg += f"{i[0]} - {i[1]} - {i[2]}\n"

        await bot.send_message(message.chat.id, bl_msg)
    else:
        await bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π!")

@dp.message_handler(content_types=["text"])
async def priting(message:types.Message):
    if base.mute(message.from_user.id):
        await message.delete()

@dp.callback_query_handler(lambda call:True)
async def called(call:types.CallbackQuery):
    if call.data=="add":
        key=types.InlineKeyboardMarkup()
        bk=types.InlineKeyboardButton(text='Backüîô',callback_data='menu')
        key.add(bk)
        await call.bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='–î–æ–±–∞–≤—å—Ç–µ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞ –≤ –≤–∞—à —á–∞—Ç. –ó–∞—Ç–µ–º –≤—ã–¥–∞–π—Ç–µ –±–æ—Ç—É, –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –±–æ—Ç –±—É–¥–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å.',reply_markup=key)
    elif call.data=="qts":
        key=types.InlineKeyboardMarkup()
        bk = types.InlineKeyboardButton(text='Backüîô', callback_data='menu')
        key.add(bk)
        await call.bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="–°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥:"+
                                                    "\n`!ban ` - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è" +
                                                    "\n`!unban [id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ]` - –†–∞–∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è" +
                                                    "\n`!mute [—á–∏—Å–ª–æ]` - –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–∞–≤–∞—Ç–µ–ª—è.–î–ª–∏—Ç—Å—è —Å–µ–∫—É–¥–∞–º–∏"+
                                                    "\n`!unmute [id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ]` - –†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" +
                                                    "\n`!blist` - —Å–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö –ø–æ–ª—å–∑–∞–≤–∞—Ç–µ–ª–µ–π",reply_markup=key,parse_mode="Markdown")
    elif call.data=="ads":
        key = types.InlineKeyboardMarkup()
        bk = types.InlineKeyboardButton(text='Backüîô', callback_data='menu')
        key.add(bk)
        await call.bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text=f"–ü–∏—Å–∞—Ç—å –ø–æ –ø–æ–≤–æ–¥—É —Ä–µ–∫–ª–∞–º—ã: @AuthorXAK",parse_mode='html',reply_markup=key)

    elif call.data=="buy":
        key = types.InlineKeyboardMarkup()
        bk = types.InlineKeyboardButton(text='Backüîô', callback_data='menu')
        key.add(bk)
        await call.bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="–î–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —É –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @AuthorXAK",reply_markup=key)

    elif call.data=="menu":
        key = types.InlineKeyboardMarkup()

        b1 = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É‚ûï', callback_data='add')
        b2 = types.InlineKeyboardButton(text='–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è‚ùì', callback_data='qts')
        b3 = types.InlineKeyboardButton(text='–†–µ–∫–ª–∞–º–∞üìà', callback_data='ads')
        b4 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å –±–æ—Ç–∞üíµ', callback_data='buy')
        key.add(b1, b3)
        key.add(b2, b4)
        await call.bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text= f"–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ {call.message.chat.first_name} !–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç‚¨á", reply_markup=key)


executor.start_polling(dp)